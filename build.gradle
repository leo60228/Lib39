buildscript {
	repositories {
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.google.code.gson:gson:2.8.7'
	}
}
plugins {
	id 'fabric-loom' version '0.12-SNAPSHOT'
	id 'io.github.juuxel.loom-quiltflower' version '1.7.3'
	id 'org.quiltmc.quilt-mappings-on-loom' version '4.2.0'
}

sourceCompatibility = JavaVersion.toVersion(17)
targetCompatibility = JavaVersion.toVersion(17)

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {
		url 'https://repo.unascribed.com'
		content {
			includeGroup 'com.unascribed'
		}
	}
	maven {
		url 'https://maven.quiltmc.org/repository/release'
		content {
			includeGroup 'org.quiltmc'
		}
	}
	maven {
		url 'https://maven.terraformersmc.com/releases/'
		content {
			includeGroup 'dev.emi'
			includeGroup 'com.terraformersmc'
		}
	}
	maven {
		url "https://maven.shedaniel.me/"
		content {
			includeGroup 'me.shedaniel'
			includeGroup 'me.shedaniel.cloth'
			includeGroup 'me.shedaniel.cloth.api'
			includeGroup 'dev.architectury'
		}
	}
	maven {
		url "https://dvs1.progwml6.com/files/maven/"
		content {
			includeGroup 'mezz.jei'
		}
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${minecraft_version}"
	mappings(loom.layered {
		addLayer quiltMappings.mappings("org.quiltmc:quilt-mappings:${minecraft_version}+build.${mappings_version}:v2")
	})
	modImplementation "net.fabricmc:fabric-loader:${loader_version}"
	
	modCompileOnly "dev.emi:emi:0.3.1+1.19"
	modCompileOnly "me.shedaniel:RoughlyEnoughItems-api:9.1.520"
	// the API jar doesn't remap properly
	modCompileOnly("mezz.jei:jei-1.19.1-fabric:11.2.0.244") { transitive = false }

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/lib39.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"
}

tasks.withType(AbstractArchiveTask) {
	preserveFileTimestamps = false
	reproducibleFileOrder = true
}

task amendJar {
	def amender = evaluate(file("JarAmender.groovy"))
	dependsOn remapJar
	doFirst {
		amender(remapJar.archivePath)
	}
}

tasks.remapJar.finalizedBy amendJar

